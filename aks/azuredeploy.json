{
        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.1",
   "parameters": {
        "clusterName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The location of the Managed Cluster resource."
            }
        },
        "vnetAddress": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Virtual Network Address. In CIDR format X.X.X.X/X"
            }
        },
        "podSubnetAddress": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Pod and Node Subnet Address. In CIDR format X.X.X.X/X. Must be a segment of the vnetAddress var"
            }
        },                     
        "osDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        "agentCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "The number of nodes for the cluster."
            },
            "minValue": 1,
            "maxValue": 50
        },
        "agentVMSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "osType": {
            "type": "string",
            "defaultValue": "Linux",
            "allowedValues": [
                "Linux"
            ],
            "metadata": {
                "description": "The type of operating system."
            }
        },
        "networkPlugin": {
            "type": "string",
            "defaultValue": "azure",
            "allowedValues": [
                "azure",
                "kubenet"
            ]
        }        
    },
    "resources": [
        {
          "apiVersion": "2019-09-01",
          "type": "Microsoft.Network/networkSecurityGroups",          
          "name": "[concat(parameters('clusterName'), '-nsg')]",
          "location": "[parameters('location')]",
          "properties": {
            "securityRules": []
          }
        },
        {
          "name": "[concat(parameters('clusterName'), '-vnet')]",
          "type": "Microsoft.Network/virtualNetworks",
          "apiVersion": "2019-04-01",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('clusterName'), '-NSG'))]"
          ],
          "properties": {
            "addressSpace": {
              "addressPrefixes": [
                "[parameters('vnetAddress')]"
              ]
            },
            "virtualNetworkPeerings": [],
            "enableDdosProtection": false,
            "enableVmProtection": false
          }
        },
        {
          "type": "Microsoft.Network/virtualNetworks/subnets",
          "apiVersion": "2019-09-01",
          "name": "[concat(parameters('clusterName'), '-vnet/podsnodes')]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', concat(parameters('clusterName'), '-vnet'))]",
            "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('clusterName'), '-nsg'))]"
          ],
          "properties": {
            "addressPrefix": "[parameters('podSubnetAddress')]",
            "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('clusterName'), '-nsg'))]"
            },
            "delegations": [],
            "privateEndpointNetworkPolicies": "Enabled",
            "privaTELinkServiceNetworkPolicies": "Enabled"
          }
        },        
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[parameters('location')]",
            "name": "[parameters('clusterName')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "dnsPrefix": "[concat(parameters('clusterName'), '-dns')]",
                "agentPoolProfiles": [
                    {
                        "name": "node1",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": "[parameters('agentCount')]",
                        "vmSize": "[parameters('agentVMSize')]",
                        "osType": "[parameters('osType')]",
                        "storageProfile": "ManagedDisks",
                        "mode": "System"
                    }
                ],
                "networkProfile": {
                    "networkPlugin": "[parameters('networkPlugin')]"
                }
            }
        },    
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.ContainerService/managedClusters/agentPools",
            "name": "[concat(parameters('clusterName'),'/node1')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]"
            ],
            "properties": {
              "count": 3,
              "vmSize": "[parameters('agentVMSize')]",
              "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
              "maxPods": 30,
              "type": "VirtualMachineScaleSets",
              "orchestratorVersion": "1.16.10",
              "osType": "[parameters('osType')]",
              "enableAutoScaling": true,
              "minCount": 3,
              "maxCount": 20,
              "mode": "System"
            }
        }
    ],
    "outputs": {
        "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference(parameters('clusterName')).fqdn]"
        }
    }
}