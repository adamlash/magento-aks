###############################
## Deployment Configuration ###
###############################
deployment:
  # Enable the Seeding/Creation of Magento when doing helm install
  install: false
  # Enable the running of hooks to run magento upgrade when doing helm upgrade
  updgrade: false
  # Enable the copying of static content to PVC shares
  copy: false
###############################
## Ingress Configuration ######
###############################
ingress:
  enabled: true
  # Enable Cert Manager Annotations
  certManager: false
  # Ingress Controller Annotations/Options, please see below for more info
  # Ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  annotations: {}
  hosts:
    - name: magento2.local
      path: /
      # Allow for TLS
      tls: false
      ## Options for TLS
      # tlsSecret: magento-tls
###############################
## Nginx Configuration ########
###############################
# Configuration for Nginx
nginx:
  image: nginx:mainline
  resources:
    limits:
      cpu: 50m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 128Mi
###############################
## Magento Configuration ######
###############################
# Configuration for Magento (PHP) Containers
php:
# General Configuration
  image: 
  resources:
  limits:
    cpu: 250m
    memory: 1Gi
  requests:
    cpu: 250m
    memory: 1Gi
# Environment Variables for the PHP Containers
  env:
    ADMIN_EMAIL: admin@example.com
    ADMIN_FIRSTNAME: Jane
    ADMIN_LASTNAME: Doe
    ADMIN_URI: admin
    ADMIN_USER: admin
    ADMIN_PASSWORD: secret0
    KEY: "11111111111111111111111111111111"
# Database Configurations
    DB_HOST: 
    DB_NAME: 
    DB_PASS: 
    DB_ROOT_PASS: 
    DB_USER:
# Magento HTTP/HTTPS Configurations
    MAGE_MODE: production
    BASE_URL_SECURE: https://magento2.local/
    BASE_URL_UNSECURE: https://magento2.local/
    USE_HTTPS: 1
    HTTPS: on
    CONFIG__DEFAULT__WEB__URL__REDIRECT_TO_BASE: 1
    CONFIG__DEFAULT__WEB__SECURE__USE_IN_FRONTEND: 1
    CONFIG__DEFAULT__WEB__SECURE__USE_IN_ADMINHTML: 1
    CONFIG__DEFAULT__WEB__COOKIE__COOKIE_DOMAIN: magento2.local
    CONFIG__DEFAULT__WEB__SECURE__BASE_LINK_URL: https://magento2.local/
    CONFIG__DEFAULT__WEB__SECURE__BASE_URL: https://magento2.local/
    CONFIG__DEFAULT__WEB__UNSECURE__BASE_LINK_URL: https://magento2.local/
    CONFIG__DEFAULT__WEB__UNSECURE__BASE_URL: https://magento2.local/
# Cron Configurations
    CONFIG__DEFAULT__SYSTEM__CRON__INDEX__USE_SEPARATE_PROCESS: 0
    CONFIG__DEFAULT__SYSTEM__CRON__DEFAULT__USE_SEPARATE_PROCESS: 0
    CONFIG__DEFAULT__SYSTEM__CRON__CONSUMERS__USE_SEPARATE_PROCESS: 0
    CONFIG__DEFAULT__SYSTEM__CRON__DDG_AUTOMATION__USE_SEPARATE_PROCESS: 0
# # Elastic Search Configurations
#     CONFIG__DEFAULT__CATALOG__SEARCH__ELASTICSEARCH6_SERVER_HOSTNAME: elasticsearch-es-http
#     CONFIG__DEFAULT__CATALOG__SEARCH__ELASTICSEARCH6_SERVER_PORT: 9200
#     CONFIG__DEFAULT__CATALOG__SEARCH__ENGINE: elasticsearch6
# # Redis Configurations
#     REDIS_CACHE_HOST: magento2k8s.redis.cache.windows.net
#     REDIS_CACHE_PORT: 6379
#     REDIS_CACHE_DB: 0
#     REDIS_FPC_HOST: redis
#     REDIS_FPC_PORT: 6379
#     REDIS_FPC_DB: 1
#     REDIS_SESSION_HOST: redis
#     REDIS_SESSION_PORT: 6379
#     REDIS_SESSION_DB: 2
# # Varnish Configurations
#     CONFIG__DEFAULT__SYSTEM__FULL_PAGE_CACHE__CACHING_APPLICATION: 2
#     CONFIG__DEFAULT__SYSTEM__FULL_PAGE_CACHE__VARNISH__ACCESS_LIST: $WEB_SERVICE_HOST
#     CONFIG__DEFAULT__SYSTEM__FULL_PAGE_CACHE__VARNISH__BACKEND_HOST: $WEB_SERVICE_HOST
#     CONFIG__DEFAULT__SYSTEM__FULL_PAGE_CACHE__VARNISH__BACKEND_PORT: $WEB_SERVICE_PORT_HTTP
#     CONFIG__DEFAULT__SYSTEM__FULL_PAGE_CACHE__VARNISH__GRACE_PERIOD: 300
#     CONFIG__DEFAULT__SYSTEM__FULL_PAGE_CACHE__VARNISH__TTL: 86400
#     VARNISH_HOST: 80
#     VARNISH_PORT: varnish




###############################
## Persistence Configuration ##
###############################
# Configuration for Persistence Values
# Magento works best wiht 'azurefile-premium' storage classes due to the high IOPS requirement. 
# ReadWriteMany is required for Static, but may be changed for Media.
# The Larger the disk the more Provisioned IOPS, please see https://azure.microsoft.com/en-us/pricing/details/storage/files/ for more info
persistence:
  static:
    storageClass: azurefile-premium
    accessMode: ReadWriteMany
    size: 200Gi
  media:
    storageClass: azurefile-premium
    accessMode: ReadWriteMany
    size: 200Gi
  